/**
 * auto-generated code
 * $date
 */
$pkgName

import java.io.Serializable;

#if($isListVO.booleanValue())
import $modelPkg.$listVOClassName;
#end
import $modelPkg.$daoClassName;
import $modelPkg.$poClassName;
import com.sunrise.jop.infrastructure.control.AbstractControlBean;
import com.sunrise.jop.infrastructure.db.DAOFactory;
import com.sunrise.jop.infrastructure.db.DataPackage;

/**
 * <p>Title: $className </p>;
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * <p>Company: sunrise Tech Ltd.</p>
 * @author $author
 * @version 1.0
 */
/**
* @ejb.bean
*    local-jndi-name="com/sunrise/jop/business/$moduleName/$baseClassName/control/$className"
*    name="$ejbInterfName"
*    view-type="local"
*    type="Stateless"
*
* @ejb.interface pattern="{0}"
* @ejb.transaction type="Required"
*/
public class $className extends AbstractControlBean implements
		$ejbInterfName {

	public $poClassName doCreate($poClassName vo) throws Exception {
		try {
			$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla, user);
			// TODO set the pk */
			return ($poClassName) dao.create(vo);
		} catch (Exception ex) {
			sessionContext.setRollbackOnly();
			throw ex;
		}
	}

	public void doRemoveByVO($poClassName vo) throws Exception {
		try {
			$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla,user);
			dao.remove(vo);
		} catch (Exception ex) {
			sessionContext.setRollbackOnly();
			throw ex;
		}
	}

	public void doRemoveByPK(Serializable pk) throws Exception {
		try {
			$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla,user);
			dao.removeByPk(pk);
		} catch (Exception ex) {
			sessionContext.setRollbackOnly();
			throw ex;
		}
	}

	public $poClassName doUpdate($poClassName vo) throws Exception {
		try {
			$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla,user);
			return ($poClassName) dao.update(vo);
		} catch (Exception ex) {
			sessionContext.setRollbackOnly();
			throw ex;
		}
	}

	public $poClassName doFindByPk(Serializable pk) throws Exception {
		$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla,user);
		return ($poClassName) dao.findByPk(pk);
	}

#if($isListVO.booleanValue())
	public DataPackage doQuery($listVOClassName params)
			throws Exception {
		$daoClassName dao = ($daoClassName) DAOFactory.build($daoClassCla,user);
		return dao.query(params);
	}
#end
}
