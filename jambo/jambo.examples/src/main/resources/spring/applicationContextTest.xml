<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <import resource="example-client.xml"/>

    <!-- 接口注册工具。用于注册接口的默认实现类。InterfaceUtils.createDefaultObject(接口名) 方法可以创建默认的实现类实例。以分离接口和实现。-->
	<bean id="com.jambo.jop.common.utils.lang.InterfaceUtils" class="com.jambo.jop.common.utils.lang.InterfaceUtils">
		<property name="interfaceClassMapping">
			<props>
                <!--<prop key="com.jambo.jop.infrastructure.component.Code2Name">com.jambo.jop.infrastructure.component.impl.DefaultCode2Name</prop>-->
                <prop key="com.jambo.jop.infrastructure.component.Code2Name">com.jambo.jop.infrastructure.component.Code2NameDubboClient</prop>
                <prop key="com.jambo.jop.business.base.dictitem.IDictitemDAO">com.jambo.jop.business.base.dictitem.DictitemDAO</prop>
                <prop key="com.jambo.jop.business.base.dictitem.IDictitemVO">com.jambo.jop.business.base.dictitem.DictitemVO</prop>
			</props>
		</property>
	</bean>

    <!-- 单数据源使用	-->
	<bean id="com.jambo.jop.infrastructure.db.SessionFactoryRouter" class="com.jambo.jop.infrastructure.db.hibernate3.Hibernate3SessionFactoryRouter"></bean>

    <bean id="xa_comon_ds" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="org.hsqldb.jdbcDriver" />
        <!-- 相应驱动的jdbcUrl,你懂的 -->
        <property name="jdbcUrl" value="jdbc:hsqldb:file:D:/Projects/jambo/db/jopcommondb" />
        <!-- 数据库的用户名 -->
        <property name="username" value="sa" />
        <!-- 数据库的密码 -->
        <property name="password" value="" />
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriodInMinutes" value="60" />
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAgeInMinutes" value="60" />
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="10" />
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="1" />
        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->
        <property name="partitionCount" value="2" />
        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
        <property name="acquireIncrement" value="2" />
        <!-- 缓存prepared statements的大小，默认值：0 -->
        <property name="statementsCacheSize" value="5" />
        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
        <property name="releaseHelperThreads" value="1" />
    </bean>

    <bean id="sessionFactory_DB_COMMON"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocations">
            <value>classpath:hibernate_comm.cfg.xml</value>
        </property>
        <property name="dataSource">
            <ref bean="xa_comon_ds" />
        </property>
    </bean>

    <bean id="transactionManager_DB_COMMON"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory_DB_COMMON" />
        </property>
    </bean>

	<!-- 注册自动代理创建，为业务Bean添加拦截器 -->
    <aop:config proxy-target-class="true" >
        <aop:pointcut id="CommonBOMethod" expression="execution(* com.jambo..*BO.*(..))"/>
        <aop:advisor pointcut-ref="CommonBOMethod" advice-ref="CommonAdvice" />
    </aop:config>

    <!--  配置事务传播特性 -->
    <tx:advice id="CommonAdvice" transaction-manager="transactionManager_DB_COMMON">
        <tx:attributes>
            <tx:method name="do*" propagation="REQUIRED"/>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>